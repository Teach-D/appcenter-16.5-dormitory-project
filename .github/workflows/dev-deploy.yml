name: Deploy to inu-dormitory-dev

on:
  push:
    branches:
      - '**'  # 어떤 브랜치든 push되면 build job 실행
  pull_request:
    types: [closed]  # PR이 닫힐 때 (머지 or 취소)
    branches:
      - dev          # dev 브랜치에 대한 PR이 머지될 때만 deploy job 실행

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # push 이벤트일 때만 실행

    steps:
      - uses: actions/checkout@v3

      - name: Set Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create application.yml
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml
          echo "✅ application.yml created"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build project
        run: ./gradlew clean build

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest .

  deploy:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true  # 머지된 PR인 경우에만 실행
    needs: build

    steps:
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest

      - name: SSH to server & deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest
            docker stop ${{ secrets.DOCKER_IMAGE }} || true
            docker rm ${{ secrets.DOCKER_IMAGE }} || true
            docker network create inu-network || true
            docker network connect inu-network inu-dormitory-dev-mysql || true
            docker run -d --name ${{ secrets.DOCKER_IMAGE }} \
              --network inu-network \
              -p 8055:8080 \
              ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest
